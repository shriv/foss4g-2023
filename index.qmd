# Introduction    
The disciplines of architecture, urban design and urban planning have long dominated the thinking around cities and urbanism. But, the world is now majority urban: just over 1 in 2 people worldwide are urban citizens. With the [ongoing super-linear increase in urban citizens since the 1960s](1 in 2 people worldwide are urban citizens), the challenges faced by cities can no longer be supported by such a small number of professionals. Diversity of thought and approaches to identifying and managing urban challenges becomes the responsibility of everyday citizens. 

Unfortunately, the interest and curiosity of the urbanite is not matched by the availability of data and tools for analysis. Professionals have access to data and tools to enable their study of cities which are typically out of reach for non-professionals. This web-book and accompanying talk are aimed at bridging this gap with FOSS and open data. 

## Approach
Urban analysis spans a limitless spectrum from qualitative social science to quantitative methods with big data and machine learning. This web-book advocates and details a _code-based quantitative approach_ that emphasises visual outputs and qualitative interpretation. But why code rather than a mature application like QGIS? A few reasons: 

- There are already plenty of QGIS tutorials. [Several workshops for this year's FOSS4G SOTM Oceania involve QGIS](https://2023.foss4g-oceania.org/#/program)..!
- While there are many urban analytics courses that focus on machine learning ([here](https://github.com/mszell/geospatialdatascience), [here](https://geographicdata.science/book/intro.html) and [here](https://r-spatial.org/book/)) and courses for learning [Python](https://sustainability-gis.readthedocs.io/en/latest/index.html) or [R](https://r.geocompx.org/) geospatial methods, there aren't as many that focus on simple analyses and an overview of how to build more insights. 
- A code-based approach to understanding urbanism is far more flexible in the long run. Powerful software like QGIS hit their limits quickly but writing your own code can make use of packages and even other programming languages if the one you have chosen is not sufficient for a particular task. The latter aspect is gaining considerable traction with tools like Rstudio, Jupyter and others allowing for dovetailed analyses between popular languages like R, Python and Julia. 
- The [algorithms in QGIS are available as a command line utility](https://docs.qgis.org/3.28/en/docs/user_manual/processing/standalone.html) that you can connect via code to your programming language choice - manually or with [existing tools](https://r-spatial.github.io/qgisprocess/). So, you can do what you would have done in QGIS plus all the things you couldn't! 
- The power of FOSS and open data lies in the extensions - from repeating analyses for different locations or greater spatial extent to statistical modelling, machine learning and big data processing. For example, generating a figure-ground diagram (@sec-figure-ground) for a 500m$^{2}$ area with code allows for easy extension to generating hundreds and thousands of the same with only a single change to the central coordinate. 

## Topics
This web-book is split into chapters covering core digital representations of cities:

- urban views (street and satellite)
- points of interest (POIs)
- transport networks
- buildings
- movement

TODO: Summarise as land use vs. people vs. interactions

Each chapter begins with a personal urban story before moving to getting the relevant data and closing with examples of how the data can be used to build a richer understanding of urban life. Learning resources to tools and examples are linked at the end of each chapter while academic references are compiled in @sec-references. 

## Pirate or snake
The aspiring urbanist following this web-book has a choice to start with either R or Python based on inclination. A very simple rubric to choose is the preference for visualisation and statistical modelling vs. machine learning. R has a slight edge for the former and Python to latter though in my experience both languages work very well for urban analyses. 

The typical upskilling (if you haven't coded before) is to begin with learning basic data science coding before moving on to learning how to handle geospatial data. Given the popularity of data science as a career, excellent free resources for learning R and Python are easily found with a simple search. Some good ones to start with include: 

- [R for data science](https://r4ds.hadley.nz/)
- [Python data science handbook](https://jakevdp.github.io/PythonDataScienceHandbook/)

Geospatial data science is no longer far behind with increasing awareness in the research communities of the opportunities and rich insights. Like data science, FOSS is the tool of choice for geospatial data scientists. Courses focusing on spatial data are also reasonably easy to find and follow. 

- [Sustainability GIS with Python](https://sustainability-gis.readthedocs.io/en/latest/index.html)
- [Geographic Data Science with Python](https://geographicdata.science/book/intro.htmls)
- [Geocomputation with R](https://r.geocompx.org/)
- [Spatial data science with R](https://r-spatial.org/book/)
- [Spatial statistics for statistics: Theory and Practice with R ](https://www.paulamoraga.com/book-spatial/)